#! /usr/bin/env python

import os, subprocess

def getCodeSize(executable):
	sSize = 0;
	funcDict = {};
	funcSet = set();
	with open('_func_names', 'r') as f:
		for line in f:
			funcSet.add(line.strip());

	#print executable;
	#print funcSet;

	subprocess.call("nm --print-size -n " + executable + " > _nm_output", shell=True);

	with open('_nm_output', 'r') as f:
		for line in f:
			splits = line.split(" ");
			numSplits = len(splits);
			if numSplits == 4: 
				func = splits[3].strip();
				size = int(splits[1].strip(), base=16)
				if func in funcSet:
					funcDict[func] = size;
	print funcDict

	with open('_func_size', 'a') as f:
		for key,value in funcDict.iteritems():
			f.write(key + " " + str(value) + "\n");
	subprocess.call("rm _nm_output", shell=True);

if __name__ == "__main__":
	cwd = os.getcwd()
	#print cwd 
	executable = os.path.basename(cwd)
	#print executable
    	getCodeSize(executable)
